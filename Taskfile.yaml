version: '3'
vars:
    PROJECT_NAME:
        sh: basename {{.ROOT_DIR}}
    CONTAINER_NAME: rust
    IS_CONTAINER_RUNNING: docker compose ps --status running | grep {{.CONTAINER_NAME}} >/dev/null

env:
    ROOT_DIR: '{{.ROOT_DIR}}'
    TASKFILE_DIR: '{{.TASKFILE_DIR}}'
    WORKING_DIR: '/apps/{{.PROJECT_NAME}}'

tasks:
    default:
        desc: Run build task.
        cmds:
        -   task: build
        silent: true

    build:
        desc: Build target using `cargo-nx` inside container.
        dir: '{{.ROOT_DIR}}'
        deps:
        -   fetch-deps
        cmds:
        -   task: exec-in-container
            vars:
                CMD: cargo nx build -- {{.CLI_ARGS}}

    shell:
        desc: Enter bash shell in container at project root.
        interactive: true
        cmds:
        -   task: exec-in-container
            vars:
                CMD: bash

    fetch-deps:
        desc: Fetch project dependencies locally when `Cargo.toml` is updated.
        dir: '{{.ROOT_DIR}}'
        preconditions:
        -   test -f Cargo.toml
        ignore_error: true
        # Skip this task if `cargo` is not installed. Have to clean checksum files because manually, because we tell the task runner the task was completed successfully, when it wasn't.
        cmds:
        -   cargo fetch 2>/dev/null || rm '{{.CHECKSUM_FILES}}' >/dev/null 2>&1
        method: checksum
        sources:
        -   Cargo.toml
        vars:
            CHECKSUM_FILES: '{{.ROOT_DIR}}/.task/checksum/*fetch-deps'

    start-compose:
        desc: Start services defined in `docker-compose.yaml` in detached mode.
        summary: The task waits until all services are running.
        dir: '{{.TASKFILE_DIR}}'
        deps:
        -   build-compose
        requires:
            vars:
            -   CONTAINER_NAME
        preconditions:
        -   test -f docker-compose.yaml
        cmds:
        -   docker compose up -d --wait
        sources:
        -   docker-compose.yaml

    rebuild-compose:
        desc: Forcefully rebuild services defined in `docker-compose.yaml`.
        prompt: This command rebuilds the Docker image from scratch, which might take a long time. Are you sure you want to proceed?
        dir: '{{.TASKFILE_DIR}}'
        cmds:
        -   docker compose build --no-cache

    build-compose:
        desc: Build services defined in `docker-compose.yaml`.
        dir: '{{.TASKFILE_DIR}}'
        cmds:
        -   docker compose build
        sources:
        -   Dockerfile

    stop-compose:
        aliases:
        -   stop
        desc: Stop services defined in `docker-compose.yaml`.
        dir: '{{.TASKFILE_DIR}}'
        preconditions:
        -   test -f docker-compose.yaml
        cmds:
        -   docker compose down --remove-orphans
        status:
        -   '{{.IS_CONTAINER_RUNNING}} || true'

    attach-to-container:
        aliases:
        -   attach
        desc: Attach to ${CONTAINER_NAME} container.
        interactive: true
        dir: '{{.TASKFILE_DIR}}'
        deps:
        -   start-compose
        requires:
            vars:
            -   CONTAINER_NAME
        cmds:
        -   docker compose attach {{.CONTAINER_NAME}}

    exec-in-container:
        aliases:
        -   exec
        desc: Execute command in ${CONTAINER_NAME} container's shell.
        dir: '{{.TASKFILE_DIR}}'
        deps:
        -   start-compose
        requires:
            vars:
            -   CMD
            -   CONTAINER_NAME
        cmds:
        -   docker compose exec -it {{.CONTAINER_NAME}} sh -c '{{.CMD}}'